<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="totalAdmin">

	<!-- 총 회원리스트 조회 -->
   <select id="selectTotalBoardList" resultType="hashmap" parameterType="hashmap">
		select *
		from 
		((select *, FORMAT((select sum(poi_point) from point_tb where member_tb.mem_idx = point_tb.mem_idx),0) as totalPoint, 'MBTI Meeting' as service_nm 
		from member_tb 
		where admin_yn = 'N')
		union all
		(select *, FORMAT((select sum(poi_point) from point_copied_tb where member_copied_tb.mem_idx = point_copied_tb.mem_idx),0) as totalPoint, 'CHAT Mail' as service_nm 
		from member_copied_tb 
		where admin_yn = 'N')) as all_service
		<if test=" searchQuery!=null and !searchQuery.equals('')">
			<if test="searchType.equals('all')">
				<![CDATA[ where  (mem_name LIKE CONCAT('%',#{searchQuery},'%') or mem_id LIKE CONCAT('%',#{searchQuery},'%') or channel_name LIKE CONCAT('%',#{searchQuery},'%') or service_nm LIKE CONCAT('%',#{searchQuery},'%')) ]]>
			</if>
			<if test="searchType.equals('name')">
				<![CDATA[ where  mem_name LIKE CONCAT('%',#{searchQuery},'%') ]]>
			</if>
			<if test="searchType.equals('id')">
				<![CDATA[ where  mem_id LIKE CONCAT('%',#{searchQuery},'%') ]]>
			</if>
			<if test="searchType.equals('channel')">
				<![CDATA[ where  channel_name LIKE CONCAT('%',#{searchQuery},'%') ]]>
			</if>
			<if test="searchType.equals('service')">
				<![CDATA[ where  service_nm LIKE CONCAT('%',#{searchQuery},'%') ]]>
			</if>
			<if test="searchType.equals('sortByPaymentYn')">
				where payment_r_yn = #{searchQuery}
			</if>
		</if>
		order by mem_idx desc 
		limit #{pageStart}, #{perPageNum}
   </select>
   
   <!-- 페이징처리용 총 회원게시글 갯수  -->
   <select id="countTotalBoardList" resultType="Integer" parameterType="hashmap">
		select count(*)
		from 
		((select *, FORMAT((select sum(poi_point) from point_tb where member_tb.mem_idx = point_tb.mem_idx),0) as totalPoint, 'MBTI Meeting' as service_nm 
		from member_tb 
		where admin_yn = 'N')
		union all
		(select *, FORMAT((select sum(poi_point) from point_copied_tb where member_copied_tb.mem_idx = point_copied_tb.mem_idx),0) as totalPoint, 'CHAT Mail' as service_nm 
		from member_copied_tb 
		where admin_yn = 'N')) as all_service
		<if test=" searchQuery!=null and !searchQuery.equals('')">
			<if test="searchType.equals('all')">
				<![CDATA[ where  (mem_name LIKE CONCAT('%',#{searchQuery},'%') or mem_id LIKE CONCAT('%',#{searchQuery},'%') or channel_name LIKE CONCAT('%',#{searchQuery},'%') or service_nm LIKE CONCAT('%',#{searchQuery},'%')) ]]>
			</if>
			<if test="searchType.equals('name')">
				<![CDATA[ where  mem_name LIKE CONCAT('%',#{searchQuery},'%') ]]>
			</if>
			<if test="searchType.equals('id')">
				<![CDATA[ where  mem_id LIKE CONCAT('%',#{searchQuery},'%') ]]>
			</if>
			<if test="searchType.equals('channel')">
				<![CDATA[ where  channel_name LIKE CONCAT('%',#{searchQuery},'%') ]]>
			</if>
			<if test="searchType.equals('service')">
				<![CDATA[ where  service_nm LIKE CONCAT('%',#{searchQuery},'%') ]]>
			</if>
			<if test="searchType.equals('sortByPaymentYn')">
				where payment_r_yn = #{searchQuery}
			</if>
		</if>
		order by mem_idx desc 
   </select>
   
   <!-- 총 탈퇴 회원리스트 조회 -->
   <select id="selectTotalWthdrBoardList" resultType="hashmap" parameterType="hashmap">
		(select *, FORMAT((select sum(poi_point) from point_tb where member_tb.mem_idx = point_tb.mem_idx),0) as totalPoint, 'MBTI Meeting' as service_nm 
		from member_tb 
		where admin_yn = 'N'
		and wthdr_yn = 'Z')
		union all
		(select *, FORMAT((select sum(poi_point) from point_copied_tb where member_copied_tb.mem_idx = point_copied_tb.mem_idx),0) as totalPoint, 'CHAT Mail' as service_nm 
		from member_copied_tb 
		where admin_yn = 'N'
		and wthdr_yn = 'Z')
		order by mem_idx desc 
		limit #{pageStart}, #{perPageNum}
   </select>
   
   <!-- 페이징처리용 총 회원게시글 갯수  -->
   <select id="countTotalWthdrBoardList" resultType="Integer">
		select count(*)
		from
			((select *
			from member_tb
			where admin_yn = 'N'
			and wthdr_yn = 'Z')
			union all
			(select * 
			from member_copied_tb
			where admin_yn = 'N'
			and wthdr_yn = 'Z')) as all_table
   </select>
   
   <!-- 작년 결제매출 총 금액  / 수 -->
   <select id = "totalLastYear"  resultType="PayMentDTO">
		select IFNULL(sum(all_payment.pmt_product_amt), 0) as pmtTotalAmt, count(*) as pmtTotalQty
		from 
			(select *
			from payment_tb
			where year (pmt_date) = year (now()) -1
			union all
			select *
			from payment_copied_tb
			where year (pmt_date) = year (now()) -1) as all_payment
   </select> 
   
    <!-- 이번연도 결제매출 총 금액 / 수 -->
   <select id = "totalYear"  resultType="PayMentDTO">
		select IFNULL(sum(all_payment.pmt_product_amt * all_payment.pmt_product_qty), 0) as pmtTotalAmt, count(*) as pmtTotalQty
		from 
			(select *
			from payment_tb
			where year (pmt_date) = year (now())
			union all
			select *
			from payment_copied_tb
			where year (pmt_date) = year (now())) as all_payment
   </select> 
    
   <!-- 이번달 결제 매출 총 금액 / 수  -->
   <select id = "totalMonth" resultType="PayMentDTO">
		select IFNULL(sum(all_payment.pmt_product_amt), 0) as pmtTotalAmt, count(*) as pmtTotalQty
		from
			(select *
			from payment_tb
			where year (pmt_date) = year (now())
			and month  (pmt_date) = month (now())
			and pmt_product = 'prm'
			union all
			select *
			from payment_copied_tb
			where year (pmt_date) = year (now())
			and month  (pmt_date) = month (now())
			and pmt_product = 'prm'
			)as all_payment
   </select> 

	<!-- 이번달 포인트 매출 금액 /수  -->
	<select id="totalMonthPoint" resultType="PayMentDTO">
		select IFNULL(sum(all_payment.pmt_product_amt), 0) as pmtTotalAmt, count(*) as pmtTotalQty
		from
			(select *
			from payment_tb
			where year (pmt_date) = year (now())
			and month  (pmt_date) = month (now())
			and pmt_product = 'basic'
			union all
			select *
			from payment_copied_tb
			where year (pmt_date) = year (now())
			and month  (pmt_date) = month (now())
			and pmt_product = 'basic'
			)as all_payment
	</select>
	
	<!-- 이번달 이벤트 가입자 수  -->
	<select id="monthTotalEvent" resultType="Integer">
		select count(*)
		from
			(select *
			from payment_tb
			where year (pmt_date) = year (now())
			and month  (pmt_date) = month (now())
			and pmt_product = 'first'
			union all
			select *
			from payment_copied_tb
			where year (pmt_date) = year (now())
			and month  (pmt_date) = month (now())
			and pmt_product = 'first'
			)as all_payment
	</select>
	
	<!-- 저번달 이벤트 가입자 수  -->
	<select id="lastMonthTotalEvent" resultType="Integer">
		select count(*)
		FROM 
			(select * 
			from payment_tb
			where month (pmt_date) =  month(DATE_SUB(now(), INTERVAL 1 month))
			and if(month(DATE_SUB(now(), INTERVAL 1 month)) = 12, year(pmt_date) = year(DATE_SUB(now(), INTERVAL 1 year)), year(pmt_date) = year(now()))
			and pmt_product = 'first'
			union all
			select * 
			from payment_copied_tb
			where month (pmt_date) =  month(DATE_SUB(now(), INTERVAL 1 month))
			and if(month(DATE_SUB(now(), INTERVAL 1 month)) = 12, year(pmt_date) = year(DATE_SUB(now(), INTERVAL 1 year)), year(pmt_date) = year(now()))
			and pmt_product = 'first') as all_payment
	</select>

   <!-- 월별 총 매출 -->
   <select id = "totalSelectTA" resultType="PayMentDTO">
		select month(all_payment.pmt_date) as pmtMonth, IFNULL(sum(all_payment.pmt_product_amt * pmt_product_qty), 0) as pmtTotalAmt
		from 
			(select *
			from payment_tb 
			where year (pmt_date) = year (now())
			union all 
			select *
			from payment_copied_tb 
			where year (pmt_date) = year (now())) as all_payment
		group by month (pmt_date)
   </select>

	<!-- 회원 수 (정기결제) -->
	<select id="countTotalPrm" resultType="String">
		SELECT COUNT(*) 
		FROM 
			(select * 
			from MEMBER_TB
			WHERE ADMIN_YN = 'N'
			AND WTHDR_YN = 'N'
			AND PAYMENT_R_YN = 'Y'
			union all
			select * 
			from MEMBER_copied_TB
			WHERE ADMIN_YN = 'N'
			AND WTHDR_YN = 'N'
			AND PAYMENT_R_YN = 'Y') as all_payment
	</select>
	
	<!-- 회원 수 (일반결제) -->
	<select id="countTotalBasic" resultType="String">
		SELECT COUNT(*) 
		FROM 
			(select * 
			from MEMBER_TB
			WHERE ADMIN_YN = 'N'
			AND WTHDR_YN = 'N'
			AND PAYMENT_R_YN = 'N'
			union all
			select * 
			from MEMBER_copied_TB
			WHERE ADMIN_YN = 'N'
			AND WTHDR_YN = 'N'
			AND PAYMENT_R_YN = 'N') as all_payment;
	</select>

	<!-- 카카오아벤트유입회원수 -->
	<select id="totalKakaoMem" resultType="String">
		select count(*)
		from
			(select * 
			from member_tb
			where channel_name = 'kakao'
			union all
			select *
			from member_copied_tb
			where channel_name = 'kakao') as all_member
	</select>
	
	<!-- 총 회원 수 -->
	<select id="totalMemberCount" resultType="int">
		select count(*)
        from
	        (select *
	        from member_tb
	        where wthdr_yn = 'N'
	        and admin_yn = 'N'
	        union all
	        select *
	        from member_copied_tb
	        where wthdr_yn = 'N'
	        and admin_yn = 'N') as all_member
	</select>

	<!--회원탈퇴처리   -->
	<update id="deleteMem2" parameterType="com.itkey.sam.admin.dto.TotalAdminDTO">
		<if test="serviceNm.equals('MBTI Meeting')">
			UPDATE MEMBER_TB
		</if>
		<if test="serviceNm.equals('CHAT Mail')">
			UPDATE MEMBER_COPIED_TB
		</if>
		SET	wthdr_yn = 'Y'
		WHERE mem_idx = #{memIdx}
	</update>
	
	<!--회원탈퇴 복구  -->
	<update id="restoreMem2" parameterType="com.itkey.sam.admin.dto.TotalAdminDTO">
		<if test="serviceNm.equals('MBTI Meeting')">
			UPDATE MEMBER_TB
		</if>
		<if test="serviceNm.equals('CHAT Mail')">
			UPDATE MEMBER_COPIED_TB
		</if>
		SET	wthdr_yn = 'N'
		WHERE mem_idx = #{memIdx}
	</update>
	
	<!-- 관리자 단걸 결제 : 이번달 단건 매출 금액 -->
	<select id="thisMonthTotalBasic" resultType="_int">
		SELECT IFNULL(sum(all_payment.pmt_product_amt * all_payment.pmt_product_qty), 0) as pmtTotalAmt
		FROM 
			(select * 
			from payment_tb
			where month (pmt_date) = month (NOW())
			and year (pmt_date) = year (now())
			and pmt_product = 'basic'
			union all
			select * 
			from payment_copied_tb
			where month (pmt_date) = month (NOW())
			and year (pmt_date) = year (now())
			and pmt_product = 'basic') as all_payment
	</select>
	
	<!-- 관리자 단걸 결제 :저번달 단건 매출 금액  -->
	<select id="lastMonthTotalBasic" resultType="_int">
		select IFNULL(SUM(PMT_PRODUCT_AMT * pmt_product_qty), 0) as pmt_product_amt 
		FROM 
			(select * 
			from payment_tb
			where month (pmt_date) =  month(DATE_SUB(now(), INTERVAL 1 month))
			and if(month(DATE_SUB(now(), INTERVAL 1 month)) = 12, year(pmt_date) = year(DATE_SUB(now(), INTERVAL 1 year)), year(pmt_date) = year(now()))
			and pmt_product = 'basic'
			union all
			select * 
			from payment_copied_tb
			where month (pmt_date) =  month(DATE_SUB(now(), INTERVAL 1 month))
			and if(month(DATE_SUB(now(), INTERVAL 1 month)) = 12, year(pmt_date) = year(DATE_SUB(now(), INTERVAL 1 year)), year(pmt_date) = year(now()))
			and pmt_product = 'basic') as all_payment
	</select>
	
	<!-- 관리자 단걸 결제 :올해 총 단건 매출 금액  -->
	<select id="thisYearTotalBasic" resultType="_int">
		select IFNULL(SUM(PMT_PRODUCT_AMT * pmt_product_qty), 0) as pmt_product_amt 
		FROM 
			(select * 
			from payment_tb
			where if(month(DATE_SUB(NOW(), INTERVAL 1 month)) = 12, year(pmt_date) = year(DATE_SUB(now(), INTERVAL 1 year)), year(pmt_date) = year(now()))
			and pmt_product = 'basic'
			union all
			select * 
			from payment_copied_tb
			where if(month(DATE_SUB(NOW(), INTERVAL 1 month)) = 12, year(pmt_date) = year(DATE_SUB(now(), INTERVAL 1 year)), year(pmt_date) = year(now()))
			and pmt_product = 'basic') as all_payment
	</select>
	
	<!-- 관리자 단걸 결제 : 총 단건 수  -->
	<select id="thisYearBasicQty2" resultType="_int">
		select count(pmt_product_qty) 
		FROM 
			(select * 
			from payment_tb
			where pmt_product = 'basic'
			union all
			select * 
			from payment_copied_tb
			where pmt_product = 'basic') as all_payment
	</select>

	<!-- 이번달 정기 결제 금액 -->
	<select id="selectThisMonthTotalRegularAmount" resultType="int">
		select IFNULL(SUM(pmt_product_qty*pmt_product_amt), 0) AS pmt_product_amt 
		FROM 
			(select * 
			from payment_tb
			WHERE YEAR(pmt_date) = YEAR(NOW())
			AND MONTH(pmt_date) = MONTH(NOW())
			AND pmt_product = 'prm'
			union all
			select * 
			from payment_copied_tb
			WHERE YEAR(pmt_date) = YEAR(NOW())
			AND MONTH(pmt_date) = MONTH(NOW())
			AND pmt_product = 'prm') as all_payment
	</select>
	
	<!-- 지난 달 정기 결제 금액 -->
	<select id="selectLastMonthRegularAmount2" resultType="int">
		select IFNULL(SUM(PMT_PRODUCT_AMT), 0) AS pmt_product_amt 
		FROM 
			(select * 
			from payment_tb
			WHERE MONTH (pmt_date) =  MONTH(DATE_SUB(NOW(), INTERVAL 1 MONTH))
			AND IF(MONTH(DATE_SUB(NOW(), INTERVAL 1 MONTH)) = 12, YEAR(pmt_date) = YEAR(DATE_SUB(now(), INTERVAL 1 YEAR)), YEAR(pmt_date) = YEAR(NOW()))
			AND pmt_product = 'prm'
			union all
			select * 
			from payment_copied_tb
			WHERE MONTH (pmt_date) =  MONTH(DATE_SUB(NOW(), INTERVAL 1 MONTH))
			AND IF(MONTH(DATE_SUB(NOW(), INTERVAL 1 MONTH)) = 12, YEAR(pmt_date) = YEAR(DATE_SUB(now(), INTERVAL 1 YEAR)), YEAR(pmt_date) = YEAR(NOW()))
			AND pmt_product = 'prm') as all_payment
	</select>
	
	<!-- 올해 총 정기 결제 금액 -->
	<select id="selectThisYearRegularAmount2" resultType="int">
		select IFNULL(SUM(pmt_product_amt), 0) as pmt_product_amt 
		FROM 
			(select * 
			from payment_tb
			WHERE YEAR(pmt_date) = YEAR(NOW())
			AND pmt_product = 'prm'
			union all
			select * 
			from payment_copied_tb
			WHERE YEAR(pmt_date) = YEAR(NOW())
			AND pmt_product = 'prm') as all_payment
	</select>
	
	<!-- 올해 총 정기 결제 건수 -->
	<select id="selectThisYearRegularCount2" resultType="int">
		select COUNT(*) 
		FROM 
			(select * 
			from payment_tb
			WHERE YEAR(pmt_date) = YEAR(NOW())
			AND pmt_product = 'prm'
			union all
			select * 
			from payment_copied_tb
			WHERE YEAR(pmt_date) = YEAR(NOW())
			AND pmt_product = 'prm') as all_payment
	</select>
	
	<!-- ///////// 결제 로그 관련 ////////// -->
	<!-- 단건 결제 조회  basic -->
	<select id="selectTotalBasicPaymentList" resultType="hashmap" parameterType="hashmap">
		select	pmt_idx, 
				pt.mem_idx, 
				mt.mem_id, 
				mt.mem_name, 
				pmt_product, 
				pmt_product_qty, 
				pmt_product_amt, 
				date_format(pmt_date, '%Y-%m-%d %H:%i:%s') as pmt_date, 
				service_nm, 
				date_format(created_at, '%Y-%m-%d %H:%i:%s') as created_at, 
				date_format(approved_at, '%Y-%m-%d %H:%i:%s') as approved_at
		from member_tb mt inner join 
			(select * , 'MBTI Meeting' as service_nm
			from payment_tb
			where pmt_product = 'basic'
			union all
			select * , 'CHAT Mail' as service_nm
			from payment_copied_tb
			where pmt_product = 'basic') pt
		where pt.mem_idx = mt.mem_idx 
		order by pmt_idx desc
		limit #{pageStart}, #{perPageNum}
	</select>
	
	<!-- 결제 조회  first -->
	<select id="selectTotalEventPaymentList" resultType="hashmap" parameterType="hashmap">
		select	pmt_idx, 
				pt.mem_idx, 
				mt.mem_id, 
				mt.mem_name, 
				pmt_product, 
				pmt_product_qty, 
				pmt_product_amt, 
				date_format(pmt_date, '%Y-%m-%d %H:%i:%s') as pmt_date, 
				service_nm,
				date_format(created_at, '%Y-%m-%d %H:%i:%s') as created_at, 
				date_format(approved_at, '%Y-%m-%d %H:%i:%s') as approved_at
		from member_tb mt inner join 
			(select * , 'MBTI Meeting' as service_nm
			from payment_tb
			where pmt_product = 'first'
			union all
			select * , 'CHAT Mail' as service_nm
			from payment_copied_tb
			where pmt_product = 'first') pt
		where pt.mem_idx = mt.mem_idx 
		order by pmt_idx desc
		limit #{pageStart}, #{perPageNum}
	</select>
	
	<!-- 총 개수  first -->
	<select id="countTotalEventPaymentList" resultType="Integer">
		select count(*)
		from member_tb mt inner join 
			(select * 
			from payment_tb
			where pmt_product = 'first'
			union all
			select * 
			from payment_copied_tb
			where pmt_product = 'first') pt
		where pt.mem_idx = mt.mem_idx 
	</select>
	
	<!-- 총 이벤트 기간 중인 회원 수 -->
	<select id="selectTotalEvenMaintainingServiceCnt" resultType="Integer">
		select count(*)
		from member_tb mt inner join 
			(select * 
			from payment_tb 
			where pmt_product = 'first' 
			and date_add(pmt_date, INTERVAL 7 DAY) > now()
			union all
			select * 
			from payment_copied_tb
			where pmt_product = 'first'
			and date_add(pmt_date, INTERVAL 7 DAY) > now()) pt
		where pt.mem_idx = mt.mem_idx 
	</select>

	<!-- 정기 결제 조회  prm -->
	<select id="selectPrmPaymentList2" resultType="hashmap" parameterType="hashmap">
		select	pmt_idx, 
				pt.mem_idx, 
				mt.mem_id, 
				mt.mem_name, 
				pmt_product, 
				pmt_product_qty, 
				pmt_product_amt, 
				date_format(pmt_date, '%Y-%m-%d %H:%i:%s') as pmt_date, 
				service_nm,
				date_format(created_at, '%Y-%m-%d %H:%i:%s') as created_at, 
				date_format(approved_at, '%Y-%m-%d %H:%i:%s') as approved_at
		from member_tb mt 
		inner join 
			(select * , 'MBTI Meeting' as service_nm
			from payment_tb
			where pmt_product = 'prm'
			union all
			select * , 'CHAT Mail' as service_nm
			from payment_copied_tb
			where pmt_product = 'prm') pt
		where pt.mem_idx = mt.mem_idx 
		order by pmt_idx desc
		limit #{pageStart}, #{perPageNum}
	</select>
	
	<!-- 서비스 별 회원 수 -->
	<select id="countTotalMemberGroupByService" resultType="hashmap">
		select 
		(select count(*)
		from member_tb
		where admin_yn = 'N'
		and wthdr_yn = 'N') as 'MBTI_Meeting',
		(select count(*)
		from member_copied_tb
		where admin_yn = 'N'
		and wthdr_yn = 'N') as 'CHAT_Mail'
	</select>
	
</mapper>